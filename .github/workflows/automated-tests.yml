name: "Automated tests"
on:
  push:
    branches:
      - "develop"
      - "v2.[5-9].x-release"
      - "v[3-9].*.x-release"
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "bigbluebutton-html5/public/locales/*.json"
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "bigbluebutton-html5/public/locales/*.json"
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build-package:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        package:
          [
            bbb-apps-akka,
            bbb-config,
            bbb-export-annotations,
            bbb-learning-dashboard,
            bbb-playback-record,
            bbb-graphql-server,
            bbb-etherpad,
            bbb-web,
            bbb-fsesl-akka,
            bbb-html5,
            bbb-freeswitch,
            bbb-webrtc,
            others,
          ]
        include:
          - package: bbb-apps-akka
            cache-files-list: akka-bbb-apps bbb-common-message
          - package: bbb-config
            cache-files-list: bigbluebutton-config
          - package: bbb-export-annotations
            cache-files-list: bbb-export-annotations
          - package: bbb-learning-dashboard
            cache-files-list: bbb-learning-dashboard
          - package: bbb-playback-record
            build-list: bbb-playback bbb-playback-notes bbb-playback-podcast bbb-playback-presentation bbb-playback-screenshare bbb-playback-video bbb-record-core
          - package: bbb-graphql-server
            build-name: bbb-graphql-server
            build-list: bbb-graphql-server bbb-graphql-middleware bbb-graphql-actions
          - package: bbb-etherpad
            cache-files-list: bbb-etherpad.placeholder.sh
            cache-urls-list: https://api.github.com/repos/mconf/ep_pad_ttl/commits https://api.github.com/repos/alangecker/bbb-etherpad-plugin/commits https://api.github.com/repos/mconf/ep_redis_publisher/commits https://api.github.com/repos/alangecker/bbb-etherpad-skin/commits
          - package: bbb-web
            cache-files-list: bigbluebutton-web bbb-common-message bbb-common-web
          - package: bbb-fsesl-akka
            cache-files-list: akka-bbb-fsesl bbb-common-message
          - package: bbb-html5
            build-list: bbb-html5
            cache-files-list: bigbluebutton-html5
          - package: bbb-freeswitch
            build-list: bbb-freeswitch-core bbb-freeswitch-sounds
            cache-files-list: freeswitch.placeholder.sh
            cache-urls-list: https://ubuntu.bigbluebutton.org/sounds.tar.gz
          - package: bbb-webrtc
            build-list: bbb-webrtc-sfu bbb-webrtc-recorder
            cache-files-list: bbb-webrtc-sfu.placeholder.sh bbb-webrtc-recorder.placeholder.sh
          - package: others
            build-list: bbb-mkclean bbb-pads bbb-libreoffice-docker bbb-transcription-controller bigbluebutton bbb-livekit
    steps:
      - uses: actions/checkout@v4
      - name: Merge branches
        uses: ./.github/actions/merge-branches
      - name: Set cache-key vars
        run: |
          BUILD_DIRS="$(echo '${{ matrix.build-list || matrix.package }}' | sed 's/[^ ]\+/build\/packages-template\/&/g')"
          echo "Including build dirs: $BUILD_DIRS"
          echo "CACHE_KEY_FILES=$(echo '${{ matrix.cache-files-list }} '$BUILD_DIRS' .gitlab-ci.yml build/deb-helper.sh' | xargs -n1 git log -1 --format=%h -- | tr '\n' '-' | sed 's/-$//')" >> $GITHUB_ENV
          echo "CACHE_KEY_URLS=$(echo '${{ matrix.cache-urls-list }}' | xargs -r -n 1 curl -Is | grep -i 'Last-Modified' | md5sum | cut -c1-10)" >> $GITHUB_ENV
          cat bigbluebutton-config/bigbluebutton-release >> $GITHUB_ENV
          echo "FORCE_GIT_REV=0" >> $GITHUB_ENV #used by setup.sh
          echo "FORCE_COMMIT_DATE=0" >> $GITHUB_ENV #used by setup.sh
      - name: Handle cache
        if: matrix.cache-files-list != ''
        id: cache-action
        uses: actions/cache@v4
        with:
          path: artifacts.tar
          key: ${{ runner.os }}-${{ matrix.package }}-${{ env.BIGBLUEBUTTON_RELEASE }}-commits-${{ env.CACHE_KEY_FILES }}-urls-${{ env.CACHE_KEY_URLS }}
      - if: ${{ steps.cache-action.outputs.cache-hit != 'true' }}
        name: Generate artifacts
        shell: bash
        run: |
          ./build/get_external_dependencies.sh
          echo "${{ matrix.build-list || matrix.package }}" | xargs -n 1 ./build/setup.sh
          tar cvf artifacts.tar artifacts/
      - name: Archive packages
        uses: actions/upload-artifact@v4
        with:
          name: artifacts_${{ matrix.package }}.tar
          path: artifacts.tar
  install-and-run-core-tests:
    needs: build-package
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4, 5, 6, 7, 8]
    env:
      shard: ${{ matrix.shard }}/8
      MATRIX_SHARD_UNDERSCORED: ${{ matrix.shard }}_8
    steps:
      - uses: ./.github/actions/install-bbb
      - name: Install test dependencies
        working-directory: ./bigbluebutton-tests/playwright
        timeout-minutes: 25
        run: |
          sh -c '
          npm ci
          npx playwright install-deps
          npx playwright install
          '
      - name: Run tests
        working-directory: ./bigbluebutton-tests/playwright
        timeout-minutes: 25
        env:
          NODE_EXTRA_CA_CERTS: /usr/local/share/ca-certificates/bbb-dev/bbb-dev-ca.crt
          ACTIONS_RUNNER_DEBUG: true
          BBB_URL: https://bbb-ci.test/bigbluebutton/api
          BBB_SECRET: bbbci
        run: npm run test-chromium-ci -- --shard=${{ env.shard }}
      - name: Run Firefox tests
        working-directory: ./bigbluebutton-tests/playwright
        if: |
          contains(github.event.pull_request.labels.*.name, 'test Firefox') ||
          contains(github.event.pull_request.labels.*.name, 'Test Firefox')
        env:
          NODE_EXTRA_CA_CERTS: /usr/local/share/ca-certificates/bbb-dev/bbb-dev-ca.crt
          ACTIONS_RUNNER_DEBUG: true
          BBB_URL: https://bbb-ci.test/bigbluebutton/api
          BBB_SECRET: bbbci
        # patch playwright's firefox so that it uses the system's root certificate authority
        run: |
          sh -c '
          find $HOME/.cache/ms-playwright -name libnssckbi.so -exec rm {} \; -exec ln -s /usr/lib/x86_64-linux-gnu/pkcs11/p11-kit-trust.so {} \;
          npm run test-firefox-ci -- --shard=${{ env.shard }}
          '
      - if: always()
        name: Upload blob report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shard }}
          path: bigbluebutton-tests/playwright/blob-report
      - if: always()
        name: Generate the shard HTML report from blob report
        shell: bash
        working-directory: ./bigbluebutton-tests/playwright
        run: npx playwright merge-reports --reporter html ./blob-report
      - if: always()
        name: Upload shard HTML report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-report_shard-${{ matrix.shard }}
          path: bigbluebutton-tests/playwright/playwright-report
      - if: failure()
        uses: ./.github/workflows/prepare-artifacts
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bbb-configs-${{ env.MATRIX_SHARD_UNDERSCORED }}
          path: configs
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bbb-logs-${{ env.MATRIX_SHARD_UNDERSCORED }}
          path: ./bbb-logs.tar.gz
  install-and-run-plugin-tests:
    needs: build-package
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - uses: ./.github/actions/install-bbb
      - name: Extract SDK Repo and Commit
        working-directory: ./bigbluebutton-html5
        run: |
          SDK_DEP=$(jq -r '.dependencies["bigbluebutton-html-plugin-sdk"]' package.json)
          echo "SDK_REPO=$(echo "$SDK_DEP" | sed -E 's|git\+(.+)#.*|\1|')" >> $GITHUB_ENV
          echo "SDK_COMMIT=$(echo "$SDK_DEP" | sed -E 's|.*#([^#]+)|\1|')" >> $GITHUB_ENV
      - name: Clone plugins SDK repository
        run: |
          cd /home/runner/work/bigbluebutton/bigbluebutton
          git clone "$SDK_REPO"
          cd sdk-repo
          git checkout "$SDK_COMMIT"
          npm install
      - name: Checkout SDK to the same BBB Core version
        working-directory: ./bigbluebutton-html-plugin-sdk
        run: |
          git checkout "$SDK_COMMIT"
          npm install
          # if git rev-parse "v$SDK_VERSION" >/dev/null 2>&1; then
          # echo "checkout to tag"
          # git checkout "v$SDK_VERSION" # Checkout tag
          # else
          # echo "checkout to commit"
          # git checkout "$SDK_VERSION" # Checkout commit hash
          # fi
      - name: Build plugin
        working-directory: ./bigbluebutton-html-plugin-sdk
        run: |
          echo "Currently building the 'Actions Button Dropdown' sample only"
          cd /samples/sample-action-button-dropdown-plugin
          npm ci --silent
          npm run build-bundle
      - name: Move built plugin files to the plugin assets directory
        run: |
          sudo -i <<EOF
          set -e
          mkdir -p /var/www/bigbluebutton-default/assets/plugins/sampleActionButtonDropdownPlugin
          cp -r home/runner/work/bigbluebutton/bigbluebutton/bigbluebutton-html-plugin-sdk/samples/sampleActionButtonDropdownPlugin/dist/ /var/www/bigbluebutton-default/assets/plugins/
          EOF
      - name: Install test dependencies
        working-directory: ./bigbluebutton-html-plugin-sdk
        timeout-minutes: 25
        run: |
          sh -c '
          npm ci
          npx playwright install-deps
          npx playwright install
          '
      - name: Run tests
        working-directory: ./bigbluebutton-html-plugin-sdk
        timeout-minutes: 25
        env:
          NODE_EXTRA_CA_CERTS: /usr/local/share/ca-certificates/bbb-dev/bbb-dev-ca.crt
          ACTIONS_RUNNER_DEBUG: true
          BBB_URL: https://bbb-ci.test/bigbluebutton/api
          BBB_SECRET: bbbci
        run: npm test
      - if: always()
        name: Upload blob report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-plugins
          path: bigbluebutton-tests/playwright/blob-report
      - if: always()
        name: Generate the shard HTML report from blob report
        shell: bash
        working-directory: ./bigbluebutton-tests/playwright
        run: npx playwright merge-reports --reporter html ./blob-report
      - if: always()
        name: Upload shard HTML report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-report_plugins
          path: bigbluebutton-tests/playwright/playwright-report
      - if: failure()
        uses: ./.github/workflows/prepare-artifacts
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bbb-configs-plugins
          path: configs
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bbb-logs-plugins
          path: ./bbb-logs.tar.gz
  upload-report:
    if: always() && !contains(github.event.head_commit.message, 'Merge pull request')
    needs:
      - install-and-run-core-tests
      - install-and-run-plugin-tests
    runs-on: ubuntu-22.04
    env:
      hasReportData: ${{ needs.install-and-run-core-tests.result == 'success' || needs.install-and-run-core-tests.result == 'failure' && needs.install-and-run-plugin-tests.result == 'success' || needs.install-and-run-plugin-tests.result == 'failure' }}
    steps:
      - uses: actions/checkout@v4
      - name: Merge and upload the blob reports
        if: ${{ env.hasReportData }}
        uses: ./.github/actions/merge-and-upload-blob-reports
      - name: Remove unnecessary artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: all-blob-reports
          failOnError: false
      - name: Write PR data for auto-comment
        if: github.event_name == 'pull_request'
        working-directory: ./
        run: |
          mkdir -p ./pr-comment-data
          echo ${{ github.event.number }} > ./pr-comment-data/pr_number
          echo ${{ github.run_id }} > ./pr-comment-data/workflow_id
      - name: Upload PR data for auto-comment
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: pr-comment-data
          path: pr-comment-data
